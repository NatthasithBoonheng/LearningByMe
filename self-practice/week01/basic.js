// üîπ 1. ‡πÅ‡∏õ‡∏•‡∏á‡∏≠‡∏∏‡∏ì‡∏´‡∏†‡∏π‡∏°‡∏¥
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô celsiusToFahrenheit(celsius)
// ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏ã‡∏•‡πÄ‡∏ã‡∏µ‡∏¢‡∏™‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ü‡∏≤‡πÄ‡∏£‡∏ô‡πÑ‡∏Æ‡∏ï‡πå
// ‡∏™‡∏π‡∏ï‡∏£: F = (C √ó 9/5) + 32

function celsiusToFahrenheit(celsius){
    return ((celsius * (9 / 5)) + 32)
}

console.log(celsiusToFahrenheit());

// üîπ 2. ‡∏´‡∏≤‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡πÄ‡∏•‡∏Ç 1 ‡∏ñ‡∏∂‡∏á n
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô sumToN(n)
// ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏ú‡∏•‡∏£‡∏ß‡∏°‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 1 ‡∏ñ‡∏∂‡∏á n

function sumToN(n){
    total = 0
    for(let i = 1 ; i <= n ; i++){
        total += i
    }
    return total
}

// üîπ 3. ‡πÄ‡∏ä‡πá‡∏Ñ‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡∏µ‡πà
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô isEven(number)
// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ true ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏π‡πà ‡πÅ‡∏•‡∏∞ false ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡πÄ‡∏•‡∏Ç‡∏Ñ‡∏µ‡πà

function isEven(number){
    return ((number % 2 ) == 0 )
}

// üîπ 4. ‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏≥ (String Reverse)
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô reverseString(str)
// ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∑‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏Å‡∏•‡∏±‡∏ö‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£

function reverseString(str){
    word = Array.from(str)
    reverseWord = ""
    n = (word.length) - 1;
    while(n >= 0){
        reverseWord = reverseWord + word[n]
        n -= 1
    }    
    return reverseWord
}

// üîπ 5. ‡∏´‡∏≤‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô findMax(arr)
// ‡∏£‡∏±‡∏ö‡∏≠‡∏≤‡∏£‡πå‡πÄ‡∏£‡∏¢‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î

function findMax(arr){
    max = 0
    for(let i of arr){
        if(i > max){
            max = i
        }
    }
    return max
}

// üîπ 6. ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏£‡∏∞‡πÉ‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô countVowels(str)
// ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏£‡∏∞ (a, e, i, o, u) ‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á

function countVowels(str){
    word = Array.from(str)
    counter = 0
    for(let i of word){
        if(i.toLowerCase() === 'a' || i.toLowerCase() === 'e' || i.toLowerCase() === 'i' || i.toLowerCase() === 'o' || i.toLowerCase() === 'u'){
            counter += 1 
        }
    }
    return counter
}

// üîπ 7. FizzBuzz
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fizzBuzz(n)
// - ‡∏û‡∏¥‡∏°‡∏û‡πå "Fizz" ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏£ 3 ‡∏•‡∏á‡∏ï‡∏±‡∏ß
// - ‡∏û‡∏¥‡∏°‡∏û‡πå "Buzz" ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏£ 5 ‡∏•‡∏á‡∏ï‡∏±‡∏ß
// - ‡∏û‡∏¥‡∏°‡∏û‡πå "FizzBuzz" ‡∏ñ‡πâ‡∏≤‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á 3 ‡πÅ‡∏•‡∏∞ 5 ‡∏•‡∏á‡∏ï‡∏±‡∏ß

function fizzBuzz(n){
    return ((n % 3) == 0 && (n % 5) == 0) ? "FizzBuzz" : (n % 3) == 0 ? "Fizz" : (n % 5) == 0 ? "Buzz" : n
}

// üîπ 8. Palindrome Checker
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô isPalindrome(str)
// ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏™‡∏ï‡∏£‡∏¥‡∏á‡πÄ‡∏õ‡πá‡∏ô palindrome ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
// (‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏ã‡πâ‡∏≤‡∏¢‡πÑ‡∏õ‡∏Ç‡∏ß‡∏≤‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å‡∏Ç‡∏ß‡∏≤‡πÑ‡∏õ‡∏ã‡πâ‡∏≤‡∏¢)

function isPalindrome(str){
    word = Array.from(str)
    if(word.length == 1){
        return true
    }
    for(let i = 0; i <= (word.length / 2) ; i++){
        if(word[i] !== word[word.length - i]){
            return false
        }
    }
    return true
}

// üîπ 9. ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡∏û‡∏ö‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô mostFrequentChar(str)
// ‡∏´‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠‡∏ö‡πà‡∏≠‡∏¢‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÉ‡∏ô‡∏™‡∏ï‡∏£‡∏¥‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠

function mostFrequentChar(str){
    word = Array.from(str)
    highhest = 0
    char = ""
    for(let i of word){
        let counter = 0
        for(j of word){
            if(i.toLowerCase == j){
                counter += 1
            }
        }
        if(counter > highhest){ 
            char = i.toLowerCase
            highhest = counter
        }
    }
    return (highhest , char)
}

// üîπ 10. ‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏π‡∏ì
// ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô multiplicationTable(n)
// ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏π‡∏ï‡∏£‡∏Ñ‡∏π‡∏ì‡∏Ç‡∏≠‡∏á n ‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 1 √ó n ‡∏ñ‡∏∂‡∏á 12 √ó n

function multiplicationTable(n){
    for(let i = 1 ; i <= 12 ; i++){
        console.log(i + "x" + n + ":" + (i * n));
    }
    return "Done"
}
